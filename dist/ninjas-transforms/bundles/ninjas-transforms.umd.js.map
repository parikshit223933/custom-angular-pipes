{"version":3,"file":"ninjas-transforms.umd.js","sources":["../../../projects/ninjas-transforms/src/lib/duration.pipe.ts","../../../projects/ninjas-transforms/src/lib/ninjas-transforms.module.ts","../../../projects/ninjas-transforms/src/public-api.ts","../../../projects/ninjas-transforms/src/ninjas-transforms.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'duration',\n})\nexport class DurationPipe implements PipeTransform {\n  getAbbreviation(s: string) {\n    return s[0];\n  }\n\n  capitalize(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  pluralize(s: string) {\n    return s + 's';\n  }\n\n  public transform(\n    epochs_in_seconds: number,\n    limit_to: DurationLimit = 'seconds',\n    short_hand = false,\n    append_zero = false,\n    show_zero = false\n  ): string {\n    const years = Math.floor(epochs_in_seconds / 60 / 60 / 24 / 365);\n    const days = Math.floor((epochs_in_seconds / 60 / 60 / 24) % 365);\n    const hours = Math.floor((epochs_in_seconds / 60 / 60) % 24);\n    const minutes = Math.floor((epochs_in_seconds / 60) % 60);\n    const seconds = Math.floor(epochs_in_seconds % 60);\n\n    let durationString = '';\n\n    let isHighestDenominationPresent = false;\n\n    const entities = [years, days, hours, minutes, seconds];\n    const duration_names = ['year', 'day', 'hour', 'minute', 'second'];\n\n    for (let i = 0; i < entities.length; i++) {\n      let entityString = entities[i].toString();\n      if (entities[i] !== 0) {\n        if (!isHighestDenominationPresent) {\n          isHighestDenominationPresent = true;\n        }\n        if (entities[i] < 10 && append_zero) {\n          entityString = '0' + entityString;\n        }\n        durationString +=\n          entityString +\n          (short_hand\n            ? this.getAbbreviation(duration_names[i])\n            : ' ' + this.capitalize(duration_names[i]));\n\n        if (!short_hand) {\n          durationString +=\n            entityString === '01' || entityString === '1' ? '' : 's';\n        }\n\n        if (limit_to === this.pluralize(duration_names[i])) {\n          return durationString.trim();\n        } else {\n          durationString += ' ';\n        }\n      } else if (\n        entities[i] === 0 &&\n        limit_to === this.pluralize(duration_names[i]) &&\n        !durationString\n      ) {\n        return (\n          short_hand\n            ? 0 + this.getAbbreviation(duration_names[i])\n            : '0 ' + this.capitalize(this.pluralize(duration_names[i]))\n        ).trim();\n      } else if (\n        entities[i] === 0 &&\n        isHighestDenominationPresent &&\n        show_zero\n      ) {\n        entityString += '0';\n        durationString +=\n          entityString +\n          (short_hand\n            ? this.getAbbreviation(duration_names[i])\n            : ' ' + this.capitalize(duration_names[i]));\n\n        if (limit_to === this.pluralize(duration_names[i])) {\n          return durationString.trim();\n        } else {\n          durationString += ' ';\n        }\n      }\n\n      if (limit_to === this.pluralize(duration_names[i])) {\n        return durationString.trim();\n      }\n    }\n\n    return durationString.trim();\n  }\n}\n\nexport type DurationLimit = 'years' | 'days' | 'hours' | 'minutes' | 'seconds';\n","import {NgModule} from '@angular/core';\nimport {DurationPipe} from './duration.pipe';\n\n\n@NgModule({\n  declarations: [\n    DurationPipe\n  ],\n  imports: [],\n  exports: [\n    DurationPipe\n  ]\n})\nexport class NinjasTransformsModule {\n}\n","/*\n * Public API Surface of ninjas-transforms\n */\n\nexport {DurationPipe, NinjasTransformsModule, DurationLimit} from './lib';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0","Pipe","NgModule"],"mappings":"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"}