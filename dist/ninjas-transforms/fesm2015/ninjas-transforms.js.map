{"version":3,"file":"ninjas-transforms.js","sources":["../../../projects/ninjas-transforms/src/lib/duration.pipe.ts","../../../projects/ninjas-transforms/src/lib/ninjas-transforms.module.ts","../../../projects/ninjas-transforms/src/public-api.ts","../../../projects/ninjas-transforms/src/ninjas-transforms.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'duration',\n})\nexport class DurationPipe implements PipeTransform {\n  getAbbreviation(s: string) {\n    return s[0];\n  }\n\n  capitalize(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  pluralize(s: string) {\n    return s + 's';\n  }\n\n  public transform(\n    epochs_in_seconds: number,\n    limit_to: DurationLimit = 'seconds',\n    short_hand = false,\n    append_zero = false,\n    show_zero = false\n  ): string {\n    const years = Math.floor(epochs_in_seconds / 60 / 60 / 24 / 365);\n    const days = Math.floor((epochs_in_seconds / 60 / 60 / 24) % 365);\n    const hours = Math.floor((epochs_in_seconds / 60 / 60) % 24);\n    const minutes = Math.floor((epochs_in_seconds / 60) % 60);\n    const seconds = Math.floor(epochs_in_seconds % 60);\n\n    let durationString = '';\n\n    let isHighestDenominationPresent = false;\n\n    const entities = [years, days, hours, minutes, seconds];\n    const duration_names = ['year', 'day', 'hour', 'minute', 'second'];\n\n    for (let i = 0; i < entities.length; i++) {\n      let entityString = entities[i].toString();\n      if (entities[i] !== 0) {\n        if (!isHighestDenominationPresent) {\n          isHighestDenominationPresent = true;\n        }\n        if (entities[i] < 10 && append_zero) {\n          entityString = '0' + entityString;\n        }\n        durationString +=\n          entityString +\n          (short_hand\n            ? this.getAbbreviation(duration_names[i])\n            : ' ' + this.capitalize(duration_names[i]));\n\n        if (!short_hand) {\n          durationString +=\n            entityString === '01' || entityString === '1' ? '' : 's';\n        }\n\n        if (limit_to === this.pluralize(duration_names[i])) {\n          return durationString.trim();\n        } else {\n          durationString += ' ';\n        }\n      } else if (\n        entities[i] === 0 &&\n        limit_to === this.pluralize(duration_names[i]) &&\n        !durationString\n      ) {\n        return (\n          short_hand\n            ? 0 + this.getAbbreviation(duration_names[i])\n            : '0 ' + this.capitalize(this.pluralize(duration_names[i]))\n        ).trim();\n      } else if (\n        entities[i] === 0 &&\n        isHighestDenominationPresent &&\n        show_zero\n      ) {\n        entityString += '0';\n        durationString +=\n          entityString +\n          (short_hand\n            ? this.getAbbreviation(duration_names[i])\n            : ' ' + this.capitalize(duration_names[i]));\n\n        if (limit_to === this.pluralize(duration_names[i])) {\n          return durationString.trim();\n        } else {\n          durationString += ' ';\n        }\n      }\n\n      if (limit_to === this.pluralize(duration_names[i])) {\n        return durationString.trim();\n      }\n    }\n\n    return durationString.trim();\n  }\n}\n\nexport type DurationLimit = 'years' | 'days' | 'hours' | 'minutes' | 'seconds';\n","import {NgModule} from '@angular/core';\nimport {DurationPipe} from './duration.pipe';\n\n\n@NgModule({\n  declarations: [\n    DurationPipe\n  ],\n  imports: [],\n  exports: [\n    DurationPipe\n  ]\n})\nexport class NinjasTransformsModule {\n}\n","/*\n * Public API Surface of ninjas-transforms\n */\n\nexport {DurationPipe, NinjasTransformsModule, DurationLimit} from './lib';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}