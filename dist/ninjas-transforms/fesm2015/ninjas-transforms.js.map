{"version":3,"file":"ninjas-transforms.js","sources":["../../../projects/ninjas-transforms/src/lib/utils/duration/duration-adjustment-layer.ts","../../../projects/ninjas-transforms/src/lib/duration.pipe.ts","../../../projects/ninjas-transforms/src/lib/ninjas-transforms.module.ts","../../../projects/ninjas-transforms/src/public-api.ts","../../../projects/ninjas-transforms/src/ninjas-transforms.ts"],"sourcesContent":["export type SmallPluralDurationEntityType =\n  | 'years'\n  | 'days'\n  | 'hours'\n  | 'minutes'\n  | 'seconds';\n\nexport type SmallSingularDurationEntityType =\n  | 'year'\n  | 'day'\n  | 'hour'\n  | 'minute'\n  | 'second';\n\nexport type SmallDurationEntityAbbreviationModel = 'y' | 'd' | 'h' | 'm' | 's';\n\nexport type CapitalPluralDurationEntityType =\n  | 'Years'\n  | 'Days'\n  | 'Hours'\n  | 'Minutes'\n  | 'Seconds';\n\nexport type CapitalSingularDurationEntityType =\n  | 'Year'\n  | 'Day'\n  | 'Hour'\n  | 'Minute'\n  | 'Second';\n\nexport type CapitalDurationEntityAbbreviationModel =\n  | 'Y'\n  | 'D'\n  | 'H'\n  | 'M'\n  | 'S';\n\nexport interface SingleEntityDataModel {\n  count: string;\n  unit:\n    | SmallPluralDurationEntityType\n    | SmallSingularDurationEntityType\n    | SmallDurationEntityAbbreviationModel\n    | CapitalPluralDurationEntityType\n    | CapitalSingularDurationEntityType\n    | CapitalDurationEntityAbbreviationModel;\n}\n\nexport interface DurationEntityHashModel {\n  [p: string]: SingleEntityDataModel;\n}\n\nexport class DurationAdjustmentLayer {\n  private durationEntityHash: DurationEntityHashModel = {};\n  private joiner: string = ' ';\n  private zerosVisible: boolean = false;\n  private shortHand: boolean = false;\n  private UnitHash = {\n    YEAR: 'year',\n    DAY: 'day',\n    HOUR: 'hour',\n    MINUTE: 'minute',\n    SECOND: 'second',\n  };\n\n  constructor(epochsInSeconds: number) {\n    this.setDurationEntityHash(epochsInSeconds);\n    this.setRespectiveForms();\n  }\n\n  setLimit(limitToEntity: SmallPluralDurationEntityType = 'seconds') {\n    switch (limitToEntity) {\n      case 'years':\n        delete this.durationEntityHash.day;\n        delete this.durationEntityHash.hour;\n        delete this.durationEntityHash.minute;\n        delete this.durationEntityHash.second;\n        return;\n      case 'days':\n        delete this.durationEntityHash.hour;\n        delete this.durationEntityHash.minute;\n        delete this.durationEntityHash.second;\n        return;\n      case 'hours':\n        delete this.durationEntityHash.minute;\n        delete this.durationEntityHash.second;\n        return;\n      case 'minutes':\n        delete this.durationEntityHash.second;\n        return;\n      case 'seconds':\n        return;\n      default:\n        return;\n    }\n  }\n\n  setJoiner(joiner: string = '') {\n    this.joiner = joiner;\n  }\n\n  setShortHand(useShortHand: boolean) {\n    this.shortHand = useShortHand;\n    if (!this.shortHand) return;\n\n    if (this.durationEntityHash.year) {\n      this.durationEntityHash.year.unit = 'y';\n    }\n    if (this.durationEntityHash.day) {\n      this.durationEntityHash.day.unit = 'd';\n    }\n    if (this.durationEntityHash.hour) {\n      this.durationEntityHash.hour.unit = 'h';\n    }\n    if (this.durationEntityHash.minute) {\n      this.durationEntityHash.minute.unit = 'm';\n    }\n    if (this.durationEntityHash.second) {\n      this.durationEntityHash.second.unit = 's';\n    }\n  }\n\n  setMinimumDigits(minDigits: number | null) {\n    if (minDigits === null) return;\n    Object.values(this.UnitHash).forEach((hKey) => {\n      if (!this.durationEntityHash[hKey]) return;\n\n      if (this.durationEntityHash[hKey].count.length >= minDigits) return;\n\n      this.durationEntityHash[hKey].count =\n        this.repeatStringNumTimes(\n          '0',\n          minDigits - this.durationEntityHash[hKey].count.length\n        ) + this.durationEntityHash[hKey].count;\n    });\n  }\n\n  setZeroVisibility(zeroCountsVisible: boolean = false) {\n    this.zerosVisible = zeroCountsVisible;\n  }\n\n  getDurationString() {\n    let entities: string[] = [];\n    Object.values(this.UnitHash).forEach((hKey) => {\n      if (!this.durationEntityHash[hKey]) return;\n      if (\n        parseInt(this.durationEntityHash[hKey].count) == 0 &&\n        !this.zerosVisible\n      )\n        return;\n\n      entities.push(\n        this.durationEntityHash[hKey].count +\n          (this.shortHand ? '' : ' ') +\n          this.durationEntityHash[hKey].unit\n      );\n    });\n    return entities.join(this.joiner);\n  }\n\n  setUnitWithCapitalLetter(unitWithCapitalLetter: boolean = false) {\n    if (!unitWithCapitalLetter) return;\n\n    Object.values(this.UnitHash).forEach((hKey) => {\n      if (!this.durationEntityHash[hKey]) return;\n      this.durationEntityHash[hKey].unit = this.capitalize(\n        this.durationEntityHash[hKey].unit\n      ) as\n        | CapitalPluralDurationEntityType\n        | CapitalSingularDurationEntityType\n        | CapitalDurationEntityAbbreviationModel;\n    });\n  }\n\n  private setDurationEntityHash(epochsInSeconds: number) {\n    this.durationEntityHash = {\n      year: {\n        count: Math.floor(epochsInSeconds / 60 / 60 / 24 / 365).toString(),\n        unit: 'years',\n      },\n      day: {\n        count: Math.floor((epochsInSeconds / 60 / 60 / 24) % 365).toString(),\n        unit: 'days',\n      },\n      hour: {\n        count: Math.floor((epochsInSeconds / 60 / 60) % 24).toString(),\n        unit: 'hours',\n      },\n      minute: {\n        count: Math.floor((epochsInSeconds / 60) % 60).toString(),\n        unit: 'minutes',\n      },\n      second: {\n        count: Math.floor(epochsInSeconds % 60).toString(),\n        unit: 'seconds',\n      },\n    };\n  }\n\n  private setRespectiveForms() {\n    Object.values(this.UnitHash).forEach((hKey) => {\n      if (!this.durationEntityHash[hKey]) return;\n      if (parseInt(this.durationEntityHash[hKey].count) != 1) return;\n      if (this.shortHand) return;\n\n      this.durationEntityHash[hKey].unit = this.durationEntityHash[\n        hKey\n      ].unit.slice(0, -1) as SmallSingularDurationEntityType;\n    });\n  }\n\n  private repeatStringNumTimes(str: string, times: number): string {\n    if (times <= 0) return '';\n    return str + this.repeatStringNumTimes(str, times - 1);\n  }\n\n  private capitalize(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport {\n  DurationAdjustmentLayer,\n  SmallPluralDurationEntityType,\n} from './utils/duration/duration-adjustment-layer';\n\n@Pipe({\n  name: 'duration',\n})\nexport class DurationPipe implements PipeTransform {\n  public transform(\n    epochsInSeconds: number,\n    limitTo: SmallPluralDurationEntityType = 'seconds',\n    shortHand: boolean = false,\n    minDigits: number | null = null,\n    showZero: boolean = false,\n    unitWithCapitalLetter: boolean = false,\n    entityJoiner: string = ' '\n  ): string {\n    const durationAdjustmentLayer = new DurationAdjustmentLayer(\n      epochsInSeconds\n    );\n    // ORDER MATTERS\n    durationAdjustmentLayer.setLimit(limitTo);\n    durationAdjustmentLayer.setJoiner(entityJoiner);\n    durationAdjustmentLayer.setShortHand(shortHand);\n    durationAdjustmentLayer.setMinimumDigits(minDigits);\n    durationAdjustmentLayer.setZeroVisibility(showZero);\n    durationAdjustmentLayer.setJoiner(entityJoiner);\n    durationAdjustmentLayer.setUnitWithCapitalLetter(unitWithCapitalLetter);\n\n    return durationAdjustmentLayer.getDurationString();\n  }\n}\n\nexport type DurationLimit = SmallPluralDurationEntityType;\n","import {NgModule} from '@angular/core';\nimport {DurationPipe} from './duration.pipe';\n\n\n@NgModule({\n  declarations: [\n    DurationPipe\n  ],\n  imports: [],\n  exports: [\n    DurationPipe\n  ]\n})\nexport class NinjasTransformsModule {\n}\n","/*\n * Public API Surface of ninjas-transforms\n */\n\nexport {DurationPipe, NinjasTransformsModule, DurationLimit} from './lib';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}