{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let DurationPipe = /*#__PURE__*/(() => {\n  class DurationPipe {\n    getAbbreviation(s) {\n      return s[0];\n    }\n\n    capitalize(s) {\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    }\n\n    pluralize(s) {\n      return s + 's';\n    }\n\n    transform(epochs_in_seconds, limit_to = 'seconds', short_hand = false, append_zero = false, show_zero = false) {\n      const years = Math.floor(epochs_in_seconds / 60 / 60 / 24 / 365);\n      const days = Math.floor(epochs_in_seconds / 60 / 60 / 24 % 365);\n      const hours = Math.floor(epochs_in_seconds / 60 / 60 % 24);\n      const minutes = Math.floor(epochs_in_seconds / 60 % 60);\n      const seconds = Math.floor(epochs_in_seconds % 60);\n      let durationString = '';\n      let isHighestDenominationPresent = false;\n      const entities = [years, days, hours, minutes, seconds];\n      const duration_names = ['year', 'day', 'hour', 'minute', 'second'];\n\n      for (let i = 0; i < entities.length; i++) {\n        let entityString = entities[i].toString();\n\n        if (entities[i] !== 0) {\n          if (!isHighestDenominationPresent) {\n            isHighestDenominationPresent = true;\n          }\n\n          if (entities[i] < 10 && append_zero) {\n            entityString = '0' + entityString;\n          }\n\n          durationString += entityString + (short_hand ? this.getAbbreviation(duration_names[i]) : ' ' + this.capitalize(duration_names[i]));\n\n          if (!short_hand) {\n            durationString += entityString === '01' || entityString === '1' ? '' : 's';\n          }\n\n          if (limit_to === this.pluralize(duration_names[i])) {\n            return durationString.trim();\n          } else {\n            durationString += ' ';\n          }\n        } else if (entities[i] === 0 && limit_to === this.pluralize(duration_names[i]) && !durationString) {\n          return (short_hand ? 0 + this.getAbbreviation(duration_names[i]) : '0 ' + this.capitalize(this.pluralize(duration_names[i]))).trim();\n        } else if (entities[i] === 0 && isHighestDenominationPresent && show_zero) {\n          entityString += '0';\n          durationString += entityString + (short_hand ? this.getAbbreviation(duration_names[i]) : ' ' + this.capitalize(duration_names[i]));\n\n          if (limit_to === this.pluralize(duration_names[i])) {\n            return durationString.trim();\n          } else {\n            durationString += ' ';\n          }\n        }\n\n        if (limit_to === this.pluralize(duration_names[i])) {\n          return durationString.trim();\n        }\n      }\n\n      return durationString.trim();\n    }\n\n  }\n\n  DurationPipe.ɵfac = function DurationPipe_Factory(t) {\n    return new (t || DurationPipe)();\n  };\n\n  DurationPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"duration\",\n    type: DurationPipe,\n    pure: true\n  });\n  return DurationPipe;\n})();","map":null,"metadata":{},"sourceType":"module"}